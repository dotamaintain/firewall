<?php
header("Content-type:text/html;charset=utf-8");
$mysql_server="localhost";
$mysql_username="nodejs";
$mysql_password="Nfjd12#$";
$mysql_port="33306";
$mysql_database="fwrules";
$list = 0; //---不要了
$count = 0;
//建立数据库链接
$conn = mysql_connect("{$mysql_server}:{$mysql_port}",$mysql_username,$mysql_password) or die("数据库链接错误");
//选择某个数据库
mysql_select_db($mysql_database,$conn);
mysql_query("set names 'utf8'");


function inout ($name){
	if (strpos($name,'INSIDE')!==false){
		return "in";
	}else if (strpos($name,'OUTSIDE')!==false){
		return "out";
	}
}

function maskmapped ($zhi){
	$obj = array("255"=>"8","254"=>"7","252"=>"6","248"=>"5","240"=>"4","224"=>"3","192"=>"2","128"=>"1","0"=>"0");
	foreach($obj as $key=>$value){  
        if($key == $zhi){
            return $value; 
        }
	}
	return $zhi;
}

function mapped ($zhi){
	$obj = array(
		"radius"=>1645,
		"radius-acct"=>1646,
		"bootps"=>67,
		"bootpc"=>68,
		"nntp"=>119,
		"klogin"=>543,
		"pcanywhere-data"=>5631,
		"pcanywhere-status"=>5632,
		"ftp-data"=>20,
		"netbios-ns"=>137,
		"netbios-dgm"=>138,
		"netbios-ssn"=>139,
		"ssh"=>22,
		"snmp"=>161,
		"chargen"=>19,
		"citrix-ica"=>1494,
		"domain"=>53,
		"ftp"=>21,
		"https"=>443,
		"http"=>80,
		"www"=>80,
		"sqlnet"=>1521,
		"time"=>37,
		"login"=>513,
		"syslog"=>514,
		"snmptrap"=>162,
		"sunrpc"=>111,
		"ldap"=>389,
		"ldaps"=>636,
		"ntp"=>123,
		"tftp"=>69,
		"pop3"=>110,
		"sip"=>5060,
		"rsh"=>514,
		"telnet"=>23,
		"xdmcp"=>177,
		"smtp"=>25
	);
	foreach($obj as $key=>$value){  
        if($key == $zhi){
            return $value; 
        }
	}
	return $zhi;
}

function trans ($ip,$mask){
	if ($ip == "host"){
		return $mask."/32";
	}else if ($ip == "any"){
		return "0.0.0.0/0";
	}else{
		$c = explode('.',$mask);
		$count = 0;
		for ($i=0;$i<4;$i++){
			$count += maskmapped($c[$i]);
		}
		return $ip."/".$count;
	}
}

function writein($database){
	$str = "./".$database.".txt";
	$crr = array();
	$handle = @fopen($str, "r");

	$arr = array();


	$check = array('access-list');

	if ($handle) {
		while (!feof($handle)) {
			$item = fgets($handle);
			$sb = false;
			for ($i=0;$i<sizeof($check);$i++){
				$sb = $sb || strstr($item,$check[$i]);
			}
			if ($sb){
				$arr[] = rtrim(ltrim($item));
			}
		}
		fclose($handle);

		for ($s=0;$s<sizeof($arr);$s++){
			if (strpos($arr[$s],'object-group')!==false){continue;}
			$i = 7;
			$brr = explode(' ',$arr[$s]);
			//$name = $brr[1]."<->".inout($brr[1]);
			$name = $brr[1];
			$permit = $brr[5];
			$protocol = $brr[6];
			$source = trans($brr[$i++],$brr[$i++]);
			if ($source == "0.0.0.0/0"){$i--;}
			if ($brr[$i] == "eq"){$i += 2;}
			$destination = trans($brr[$i++],$brr[$i++]);
			if ($destination == "0.0.0.0/0"){$i--;}
			if (strpos("tcpudp",$protocol)!==false){
				if ($brr[$i] == "eq"){
					$portstart = $portend = mapped($brr[++$i]);
				}else if ($brr[$i] == "range"){
					$portstart = mapped($brr[++$i]);
					$portend = mapped($brr[++$i]);
				}else{
					$portstart = $portend = "any";
				}
			}else{
				$portstart = $portend = "any";
			}
			//print_r(array($name,$permit,$protocol,$source,$destination,$portstart.'-'.$portend));
			if (sizeof($crr) == 0){
				$crr[] = array($name,$permit,$protocol,$source,$destination,$portstart.'-'.$portend);
			}else{
				$tmp = $crr[sizeof($crr)-1];
				if(($name == $tmp[0]) && ($permit == $tmp[1]) && ($protocol == $tmp[2]) && ($source == $tmp[3]) && ($destination == $tmp[4])){
					$old = explode('-',$tmp[5]);
					$old[] = $portstart;
					$old[] = $portend;
					for($i=0;$i<sizeof($old)-1;$i++){
						for($j=0;$j<sizeof($old)-1-$i;$j++){
							if($old[$j] > $old[$j+1]){
								$tm = $old[$j];
								$old[$j] = $old[$j+1];
								$old[$j+1] = $tm;
							} 
						}
					}
					$str = null;
					for($i=0;$i<sizeof($old);$i++){
						$str = $str.'-'.$old[$i];
					}
					$str = substr($str,1);
					$crr[sizeof($crr)-1][5] = $str;
				}else{
					$crr[] = array($name,$permit,$protocol,$source,$destination,$portstart.'-'.$portend);
				}
			}
		}
	} else {
		echo "文件错误！";
	}
	return $crr;
}

function judge ($a,$b){
	$a = explode('/',$a);
	$b = explode('/',$b);
	if (($a[1] == $b[1]) && ($a[1] == 32)){
		$a = explode('.',$a[0]);
		$b = explode('.',$b[0]);
		if (($a[0] == $b[0]) && ($a[1] == $b[1]) && ($a[2] == $b[2])){
			$a = $a[3];
			$b = $b[3];
			if (($a - $b) == 1){
				return -1;
			}else if (($b - $a) == 1){
				return 1;
			}else{
				return 0;
			}
		}else{
			return 0;
		}
	}else{
		return 0;
	}
}

function tail ($a){
	$a = explode('/',$a);
	$a = explode('.',$a[0]);
	return $a[3];
}

function etldestination ($arr){
	$del = array();
	for ($s=0;$s<sizeof($arr);$s++){
		if(($arr[$s][3] == $arr[$s+1][3]) && ($arr[$s][0] == $arr[$s+1][0]) && ($arr[$s][1] == $arr[$s+1][1]) && ($arr[$s][2] == $arr[$s+1][2]) && ($arr[$s][5] == $arr[$s+1][5])){
			$bias = 0;
			$base = judge($arr[$s][4],$arr[$s+1][4]);
			do {
				$judge = judge($arr[$s+$bias][4],$arr[$s+1+$bias][4]);
				$bias++;
			}while(($judge != 0) && ($judge == $base) && ($arr[$s+$bias-1][3] == $arr[$s+1+$bias-1][3]) && ($arr[$s+$bias-1][0] == $arr[$s+1+$bias-1][0]) && ($arr[$s+$bias-1][1] == $arr[$s+1+$bias-1][1]) && ($arr[$s+$bias-1][2] == $arr[$s+1+$bias-1][2]) && ($arr[$s+$bias-1][5] == $arr[$s+1+$bias-1][5]));
			$bias--;
			if ($bias > 0){
				$arr[$s][4] = $arr[$s][4].'-'.(tail($arr[$s][4])+$base*$bias);
				for ($i=0;$i<$bias;$i++){
					$del[] = $s+1+$i;
				}
				$s+=$bias;
			}
		}
	}
	for ($i=sizeof($del)-1;$i>=0;$i--){
		array_splice($arr,$del[$i],1);
	}
	return $arr;
}

function etlsource ($arr){
	$del = array();
	for ($s=0;$s<sizeof($arr);$s++){
		if(($arr[$s][4] == $arr[$s+1][4]) && ($arr[$s][0] == $arr[$s+1][0]) && ($arr[$s][1] == $arr[$s+1][1]) && ($arr[$s][2] == $arr[$s+1][2]) && ($arr[$s][5] == $arr[$s+1][5])){
			$bias = 0;
			$base = judge($arr[$s][3],$arr[$s+1][3]);
			do {
				$judge = judge($arr[$s+$bias][3],$arr[$s+1+$bias][3]);
				$bias++;
			}while(($judge != 0) && ($judge == $base) && ($arr[$s+$bias-1][4] == $arr[$s+1+$bias-1][4]) && ($arr[$s+$bias-1][0] == $arr[$s+1+$bias-1][0]) && ($arr[$s+$bias-1][1] == $arr[$s+1+$bias-1][1]) && ($arr[$s+$bias-1][2] == $arr[$s+1+$bias-1][2]) && ($arr[$s+$bias-1][5] == $arr[$s+1+$bias-1][5]));
			$bias--;
			if ($bias > 0){
				$arr[$s][3] = $arr[$s][3].'-'.(tail($arr[$s][3])+$base*$bias);
				for ($i=0;$i<$bias;$i++){
					$del[] = $s+1+$i;
				}
				$s+=$bias;
			}
		}
	}
	for ($i=sizeof($del)-1;$i>=0;$i--){
		array_splice($arr,$del[$i],1);
	}
	return $arr;
}

function etl ($arr){
	//$arr = etldestination($arr);
	$arr = etlsource($arr);
	$arr = etldestination($arr);
	//$arr = etlsource($arr);
	return $arr;
}



function zhixing ($database){
	$arr = writein($database);
	$arr = etl($arr);
	echo "<pre>";
	print_r($arr);
	echo "</pre>";
	for ($s=0;$s<sizeof($arr);$s++){
		$sql = "INSERT INTO ".$database." VALUES (".($s+1).",'".$arr[$s][0]."','".$arr[$s][1]."','".$arr[$s][2]."','".$arr[$s][3]."','".$arr[$s][4]."','".$arr[$s][5]."')";
		$result=mysql_query($sql);
	}
}

zhixing('internet');




?>
